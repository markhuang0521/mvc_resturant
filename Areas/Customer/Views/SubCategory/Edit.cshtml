@model Resturant.Models.CategoryViewModel
@using Resturant.Extension

@{
    ViewData["Title"] = "Edit";
}


<h3 class="text-info"> Edit SubCategory</h3>

<partial name="_statusMessage" model="Model.StatusMessage" />
<hr />

<div class=" backgroundWhite border row">
    <div class="col-md-4">
        <form asp-action="Edit">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SubCategory.CategoryId" />
            <input type="hidden" asp-for="SubCategory.Id" />
            <div class="form-group">
                <label asp-for="SubCategory.CategoryId" class="col-form-label"></label>
                <select id="CategoryName" disabled asp-for="SubCategory.CategoryId" asp-items="Model.CategoryList.ToSelectListItem(Model.SubCategory.CategoryId)" class="form-control"></select>
            </div>
            <div class="form-group">
                <label asp-for="SubCategory.Name" class="control-label"></label>
                <input asp-for="SubCategory.Name" class="form-control" />
                <span asp-validation-for="SubCategory.Name" class="text-danger"></span>
            </div>

            <partial name="_editAndBackBtn" model="Model.SubCategory.Id" />

        </form>
    </div>
    <div class="col-3 offset-2">
        @if (Model.SubCategoryList.Count() > 0)
        {
            <p>Existing SubCategories</p>
            <div id="SubCategoryList">
                <ul class="list-group"></ul>
            </div>

        }
    </div>
</div>

@section scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");}

    <script>
        function updateSubcategory() {
            var categoryId = document.getElementById("CategoryName").value;
            console.log(categoryId)

            $list = $("#SubCategoryList");
            $.ajax({
                url: '/Customer/SubCategory/GetSubcategory/' + categoryId,
                type: 'GET',
                dataType: 'text',
                success: function (data) {
                    results = JSON.parse(data);
                    $list.html('');
                    $list.append('<ul class="list-group">');

                    for (i in results) {
                        $list.append('<li class="list-group-item">' + results[i].text + '</li>');
                    }
                    $list.append('</ul>');

                }
            });
            console.log($list);
        }

        $(document).ready(function () {
            updateSubcategory();
        });



    </script>
}



